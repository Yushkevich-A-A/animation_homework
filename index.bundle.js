!function(){"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),function(){var e;t.g.importScripts&&(e=t.g.location+"");var i=t.g.document;if(!e&&i&&(i.currentScript&&(e=i.currentScript.src),!e)){var n=i.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e}(),new class{constructor(){this.deleteContent=this.deleteContent.bind(this),this.init()}init(){this.drawCollapseWidget(),this.createContent(),this.listeners()}listeners(){document.addEventListener("click",(t=>{t.target.closest(".collapse-button")&&this.checkExsistContent()}))}checkExsistContent(){if(!document.querySelector(".collapse-block-text"))return this.addContent(),void this.buttonClicked();this.hiddenContent()}drawCollapseWidget(){this.widget=document.createElement("div"),this.widget.classList.add("widget-collapsable"),this.widget.innerHTML=' <div class="collapse-block-button">\n                                <button class="collapse-button">Collapse</button>\n                              </div>\n                              <div class="collapse-block-content">\n                              </div>',document.body.appendChild(this.widget),this.button=document.querySelector(".collapse-button"),this.contentBlock=document.querySelector(".collapse-block-content"),this.contentBlockHeight=this.contentBlock.getBoundingClientRect().height,this.contentBlock.style.height=`${this.contentBlockHeight}px`}createContent(){this.contentBlockText=document.createElement("p"),this.contentBlockText.classList.add("collapse-block-text"),this.contentBlockText.textContent="Стихотворение в прозе (фр. Poème en prose, petit poème en prose) — литературная форма, в которой прозаический (не осложнённый, как в стихе, дополнительной ритмической организацией) принцип развёртывания речи сочетается с относительной краткостью и лирическим пафосом, свойственными поэзии. Повествовательное начало в этой форме зачастую ослаблено, а внимание к языковой, выразительной стороне текста, в том числе к образности и собственно прозаическому ритму — повышено. При дальнейшем повышении ритмической упорядоченности текста, выходящей за пределы речевой нормы, возникают такие смежные со стихотворением в прозе формы, как версэ и ритмическая проза (в русской традиции ассоциирующаяся, прежде всего, с именем Андрея Белого); по другую сторону стихотворения в прозе лежат сверхкраткие прозаические жанры (в частности, афоризм). Не следует путать стихотворение в прозе со свободным стихом (верлибром), ритмическая структура которого однозначно задана стихоразделами."}addContent(){this.contentBlock.appendChild(this.contentBlockText),this.contentBlockTextHeight=this.contentBlockText.getBoundingClientRect().height,this.contentBlock.style.height=`${this.contentBlockHeight+this.contentBlockTextHeight}px`}hiddenContent(){this.contentBlock.style.height=`${this.contentBlockHeight}px`,this.contentBlock.addEventListener("transitionend",this.deleteContent)}deleteContent(){this.contentBlockText.parentElement.removeChild(this.contentBlockText),this.contentBlock.removeEventListener("transitionend",this.deleteContent)}buttonClicked(){this.button.classList.contains("collapse-button-clicked")||this.button.classList.add("collapse-button-clicked")}},new class{constructor(){this.deleteButton=this.deleteButton.bind(this),this.deleteForm=this.deleteForm.bind(this),this.init()}init(){this.drawWidget(),this.listeners()}listeners(){this.widgetCallback.addEventListener("click",(t=>{if(t.preventDefault(),t.target.closest(".widget-form-button"))return this.hiddenButton(),void this.appendForm();t.target.closest(".button-submit-form")&&(this.appendButton(),this.hiddenForm()),t.target.closest(".button-cancel-form")&&(this.appendButton(),this.hiddenForm())})),this.widgetFormButton.addEventListener("mouseenter",(t=>{t.target.querySelector(".button-open-form").classList.add("button-open-form-hover")})),this.widgetFormButton.addEventListener("mouseleave",(t=>{t.target.querySelector(".button-open-form").classList.remove("button-open-form-hover")}))}drawWidget(){this.widgetCallback=document.createElement("div"),this.widgetCallback.classList.add("widget-callback"),document.body.appendChild(this.widgetCallback),this.drawButton(),this.drawWidgetForm()}drawButton(){this.widgetFormButton=document.createElement("div"),this.widgetFormButton.classList.add("widget-form-button"),this.widgetFormButton.innerHTML='<button class="button-open-form"></button>',this.widgetCallback.appendChild(this.widgetFormButton),this.topPoint=this.widgetFormButton.offsetTop+this.widgetFormButton.offsetHeight/2,this.leftPoint=this.widgetFormButton.offsetLeft+this.widgetFormButton.offsetWidth/2}drawWidgetForm(){this.widgetForm=document.createElement("div"),this.widgetForm.classList.add("widget-form","hidden-element"),this.widgetForm.innerHTML='<form class="form">\n                                  <div class="block-textarea-form">\n                                    <label for="textarea-form" class="textarea-form-label">Напишите нам</label>\n                                    <textarea name="textarea-form" class="textarea-form"></textarea>\n                                  </div>\n                                  <div class="block-buttons-form">\n                                    <button class="button-submit-form">Отправить</button>\n                                    <div class="button-cancel-form"></div>\n                                  </div>\n                                </form>',this.widgetCallback.appendChild(this.widgetForm),this.widgetForm.style.top=this.topPoint-this.widgetForm.offsetHeight+"px",this.widgetForm.style.left=this.leftPoint-this.widgetForm.offsetWidth+"px",this.widgetForm.classList.add("disactive")}hiddenButton(){this.widgetFormButton.classList.add("hidden-element"),this.widgetFormButton.addEventListener("transitionend",this.deleteButton)}appendButton(){this.widgetFormButton.classList.remove("disactive"),setTimeout((()=>this.widgetFormButton.classList.remove("hidden-element")))}hiddenForm(){this.widgetForm.classList.add("hidden-element"),this.widgetForm.addEventListener("transitionend",this.deleteForm)}appendForm(){this.widgetForm.classList.remove("disactive"),setTimeout((()=>this.widgetForm.classList.remove("hidden-element")))}deleteButton(){this.widgetFormButton.classList.add("disactive"),this.widgetFormButton.removeEventListener("transitionend",this.deleteButton)}deleteForm(){this.widgetForm.classList.add("disactive"),this.widgetForm.removeEventListener("transitionend",this.deleteForm)}},new class{constructor(){this.init(),this.arrBubbles=["one","two","three","four"]}init(){this.drawWidget(),this.listeners()}drawWidget(){this.widget=document.createElement("div"),this.widget.classList.add("widget-liked"),this.widget.innerHTML='<div class="liked-block"></div>\n    <div class="liked-button-block">\n      <button class="liked-button">Like</button>\n    </div>',document.body.appendChild(this.widget),this.button=document.querySelector(".liked-button"),this.pointTop=this.button.offsetTop+this.button.offsetHeight/2,this.pointLeft=this.button.offsetLeft+this.button.offsetWidth/2}listeners(){this.button.addEventListener("click",(()=>{this.createHeart()}))}createHeart(){new Promise(((t,e)=>{const i=document.createElement("img");i.classList.add("img-heart"),i.src="heart.png",this.widget.appendChild(i),i.style.top=this.pointTop-i.offsetHeight/2+"px",i.style.left=this.pointLeft-i.offsetWidth/2+"px";const n=Math.floor(4*Math.random());i.addEventListener("animationend",(()=>{t(i)})),i.classList.add(this.arrBubbles[n])})).then((t=>t.parentElement.removeChild(t)))}},t.p}();